//=============================================================================
//
// 床処理 [floor.cpp]
// Author : Suzuki Mahiro
//
//=============================================================================

//*****************************************************************************
//インクルードファイル
//*****************************************************************************
#include "floor.h"
#include "renderer.h"
#include "manager.h"
#include "floorData.h"

//*****************************************************************************
//静的メンバ変数
//*****************************************************************************
LPDIRECT3DTEXTURE9 CFloor::m_pTexture = nullptr;

//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CFloor::CFloor(OBJTYPE Priority) :CScene3D(Priority)
{
}

//*****************************************************************************
//デストラクタ
//*****************************************************************************
CFloor::~CFloor()
{
}

//*****************************************************************************
//ロード処理
//*****************************************************************************
void CFloor::Load()
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	D3DXCreateTextureFromFile(pDevice, "Data/Textures/floor.jpg", &m_pTexture);
}

//*****************************************************************************
//アンロード処理
//*****************************************************************************
void CFloor::Unload()
{
	if (m_pTexture != nullptr)
	{
		m_pTexture->Release();
		m_pTexture = nullptr;
	}
}

//*****************************************************************************
//床の生成
//*****************************************************************************
CFloor* CFloor::Create(const int &nCreateNum)
{
	//床のメモリ確保
	CFloor *pFloor = new CFloor;

	if (pFloor != nullptr)
	{
		//生成順の代入
		pFloor->m_nCreateNum = nCreateNum;

		//初期化処理
		pFloor->Init();

		return pFloor;
	}

	return nullptr;
}

//*****************************************************************************
//初期化処理
//*****************************************************************************
HRESULT CFloor::Init(void)
{
	//床データの取得処理
	GetFloorData();

	//テクスチャの設定
	BindTexture(m_pTexture);

	//CScene3Dの初期化処理
	CScene3D::Init();

	return S_OK;
}

//*****************************************************************************
//終了処理
//*****************************************************************************
void CFloor::Uninit(void)
{
	//CScene3Dの終了処理
	CScene3D::Uninit();
}

//*****************************************************************************
//更新処理
//*****************************************************************************
void CFloor::Update(void)
{
	//CScene3Dの更新処理
	CScene3D::Update();
}

//*****************************************************************************
//描画処理
//*****************************************************************************
void CFloor::Draw(void)
{
	//CScene3Dの描画処理
	CScene3D::Draw();
}

//*****************************************************************************
//床データの取得処理
//*****************************************************************************
void CFloor::GetFloorData(void)
{
	//床データの取得
	CFloorData::CreateInfo* pWallData = CManager::GetFloorData()->GetCreateInfo(m_nCreateNum);

	if (pWallData != nullptr)
	{
		//位置の設定
		SetPos(pWallData->pos);

		//大きさの設定
		SetSize(pWallData->size);

		//角度の設定
		SetRot(pWallData->rot);
	}
}