//=============================================================================
//
// カメラ処理 [camera.cpp]
// Author : Suzuki Mahiro
//
//=============================================================================

//*****************************************************************************
//インクルードファイル
//*****************************************************************************
#include "manager.h"
#include "renderer.h"
#include "camera.h"

//*****************************************************************************
//マクロ定義
//*****************************************************************************
#define CAMERA_POS_V (D3DXVECTOR3(0.0f, 180.0f, -120.0f))	//カメラの位置
#define CAMERA_POS_R (D3DXVECTOR3(0.0f, -60.0f, 0.0f))		//カメラの角度

//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CCamera::CCamera()
{
	posV = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	posR = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	vecU = D3DXVECTOR3(0.0f, 1.0f, 0.0f);
	memset(mtxProjection, NULL, sizeof(mtxProjection));
	memset(mtxView, NULL, sizeof(mtxView));
	m_Distance = 0;
	m_lTheta	= 1.0f;
	m_lPhi		= 1.7f;	
	m_nCount = 0;
	m_bTurn = false;
	m_nTurnCnt = 0;
}

//*****************************************************************************
//デストラクタ
//*****************************************************************************
CCamera::~CCamera()
{

}

//*****************************************************************************
//初期化処理
//*****************************************************************************
void CCamera::Init(void)
{
	posV = CAMERA_POS_V;
	posR = CAMERA_POS_R;
	vecU = D3DXVECTOR3(0.0f, 1.0f, 0.0f);
	memset(mtxProjection, NULL, sizeof(mtxProjection));
	memset(mtxView, NULL, sizeof(mtxView));
	m_Distance = 0;
	m_lTheta = 1.0f;
	m_lPhi = 1.7f;
	m_nCount = 0;
	m_RotX = 0;
	m_RotY = 0;
}

//*****************************************************************************
//終了処理
//*****************************************************************************
void CCamera::Uninit(void)
{

}

//*****************************************************************************
//更新処理
//*****************************************************************************
void CCamera::Update(void)
{	
}

//*****************************************************************************
//カメラの設定
//*****************************************************************************
void CCamera::SetCamera(void)
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	//ビューマトリックスの初期化
	D3DXMatrixIdentity(&mtxView);
	//ビューマトリックスの作成
	D3DXMatrixLookAtLH(&mtxView, &posV, &posR, &vecU);
	//ビューマトリックスの設定
	pDevice->SetTransform(D3DTS_VIEW, &mtxView);

	//プロジェクトマトリックスの初期化
	D3DXMatrixIdentity(&mtxProjection);
	//プロジェクションマトリックスの作成
	D3DXMatrixPerspectiveFovLH(&mtxProjection,		//プロジェクションマトリックス
		D3DXToRadian(70),							//視野角
		SCREEN_SIZE.x / SCREEN_SIZE.y,				//画面比
		10.0f,										//カメラ描画最短距離
		10000.0f);									//カメラ描画最長距離
	//プロジェクションマトリックスの設定
	pDevice->SetTransform(D3DTS_PROJECTION, &mtxProjection);
}

//*****************************************************************************
//キーボード処理
//*****************************************************************************
void CCamera::Keyboard(void)
{
}

//*****************************************************************************
//ゲームパッド処理
//*****************************************************************************
void CCamera::GamePad(void)
{
}