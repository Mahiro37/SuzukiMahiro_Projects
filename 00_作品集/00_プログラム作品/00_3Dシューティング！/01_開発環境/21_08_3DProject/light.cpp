//=============================================================================
//
// ライト処理 [light.cpp]
// Author : Suzuki Mahiro
//
//=============================================================================

//*****************************************************************************
//インクルードファイル
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "light.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define LIGHT_DIR (D3DXVECTOR3(0.0f, -0.5f, 0.0f))			//ライトの角度

//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CLight::CLight()
{
	ZeroMemory(&m_light, sizeof(D3DLIGHT9));
}

//*****************************************************************************
//デストラクタ
//*****************************************************************************
CLight::~CLight()
{

}

//*****************************************************************************
//初期化処理
//*****************************************************************************
void CLight::Init(void)
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	D3DXVECTOR3 vecDir;		//ライトの方向ベクトル用
	D3DMATERIAL9 material;	//マテリアルの設定用

	//ライトとマテリアル変数のクリア
	ZeroMemory(&m_light, sizeof(D3DLIGHT9));
	ZeroMemory(&material, sizeof(D3DMATERIAL9));

	//マテリアル情報の設定
	material.Ambient = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	pDevice->SetMaterial(&material);
	pDevice->SetRenderState(D3DRS_AMBIENT, 0x44444444);

	//ライトの種類を設定
	m_light.Type = D3DLIGHT_DIRECTIONAL;

	//ライトの拡散光を設定
	m_light.Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

	//ライトの方向を設定
	vecDir = LIGHT_DIR;
	D3DXVec3Normalize(&vecDir, &vecDir);
	m_light.Direction = vecDir;

	//ライト情報の設定
	pDevice->SetLight(0, &m_light);

	//ライトを有効にする
	pDevice->LightEnable(0, TRUE);
}

//*****************************************************************************
//終了処理
//*****************************************************************************
void CLight::Uninit(void)
{
}
